# Generated by Django 3.1.4 on 2020-12-18 14:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web.multilingual.modelfields


def copy_objects_from_article_and_event_to_article_tmp_and_event_tmp(apps, schema_editor):
    Article_Tmp = apps.get_model('news', 'Article_Tmp')
    Event_Tmp = apps.get_model('news', 'Event_Tmp')
    Article = apps.get_model('news', 'Article')
    Event = apps.get_model('news', 'Event')
    # The `_meta.fields` list includes the PK
    copy_objects_from_old_model_to_new_model(Article, Article_Tmp, Article_Tmp._meta.fields)
    copy_objects_from_old_model_to_new_model(Event, Event_Tmp, Event_Tmp._meta.fields)


def copy_objects_from_old_model_to_new_model(old_model, new_model, fields_to_copy):
    field_names = [field.name for field in fields_to_copy]
    for old_obj in old_model.objects.all():
        old_obj_field_dict = {
            field_name: getattr(old_obj, field_name)
            for field_name in field_names
        }
        new_model.objects.create(**old_obj_field_dict)


def copy_objects_from_article_tmp_and_event_tmp_to_article_and_event(apps, schema_editor):
    Article_Tmp = apps.get_model('news', 'Article_Tmp')
    Event_Tmp = apps.get_model('news', 'Event_Tmp')
    Article = apps.get_model('news', 'Article')
    Event = apps.get_model('news', 'Event')
    copy_objects_from_old_model_to_new_model(Article_Tmp, Article, Article_Tmp._meta.fields)
    copy_objects_from_old_model_to_new_model(Event_Tmp, Event, Event_Tmp._meta.fields)


class Migration(migrations.Migration):

    dependencies = [
        ('news', '0019_add_related_names'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article_Tmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', web.multilingual.modelfields.MultiLingualTextField(verbose_name='title')),
                ('content', web.multilingual.modelfields.MultiLingualRichTextUploadingField(verbose_name='content')),
                ('clickbait', web.multilingual.modelfields.MultiLingualTextField(verbose_name='clickbait')),
                ('image', models.ImageField(verbose_name='image')),
                ('contain', models.BooleanField(default=False, verbose_name="don't crop the image")),
                ('featured', models.BooleanField(default=True, verbose_name='featured')),
                ('hidden', models.BooleanField(default=False, verbose_name='hidden')),
                ('private', models.BooleanField(default=False, verbose_name='internal')),
                ('publication_time', models.DateTimeField(default=django.utils.timezone.localtime, help_text='The article will be hidden until this date.', verbose_name='publication time')),
            ],
            options={
                'ordering': ('-publication_time',),
                'permissions': (('can_view_private', 'Can view private news'),),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event_Tmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', web.multilingual.modelfields.MultiLingualTextField(verbose_name='title')),
                ('content', web.multilingual.modelfields.MultiLingualRichTextUploadingField(verbose_name='content')),
                ('clickbait', web.multilingual.modelfields.MultiLingualTextField(verbose_name='clickbait')),
                ('image', models.ImageField(verbose_name='image')),
                ('contain', models.BooleanField(default=False, verbose_name="don't crop the image")),
                ('featured', models.BooleanField(default=True, verbose_name='featured')),
                ('hidden', models.BooleanField(default=False, verbose_name='hidden')),
                ('private', models.BooleanField(default=False, verbose_name='internal')),
                ('event_type', models.CharField(choices=[('R', 'Repeating'), ('S', 'Standalone')], default='R', max_length=1, verbose_name='type of event')),
                ('number_of_tickets', models.IntegerField(default=0, verbose_name='number of available tickets')),
            ],
            options={
                'permissions': (('can_view_private', 'Can view private news'),),
                'abstract': False,
            },
        ),
        migrations.RunPython(copy_objects_from_article_and_event_to_article_tmp_and_event_tmp, migrations.RunPython.noop),

        # Update foreign keys to reference the non-abstract models directly,
        # instead of through the (automatically generated) `newsbase_ptr` field of the old models
        migrations.AlterField(
            model_name='eventticket',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='news.event_tmp', verbose_name='event'),
        ),
        migrations.AlterField(
            model_name='timeplace',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeplaces', to='news.event_tmp'),
        ),
        migrations.RunPython(migrations.RunPython.noop, copy_objects_from_article_tmp_and_event_tmp_to_article_and_event),

        migrations.DeleteModel(
            name='Article',
        ),
        migrations.DeleteModel(
            name='Event',
        ),
        migrations.DeleteModel(
            name='NewsBase',
        ),
        migrations.RenameModel(
            old_name='Article_Tmp',
            new_name='Article',
        ),
        migrations.RenameModel(
            old_name='Event_Tmp',
            new_name='Event',
        ),
    ]
