# Generated by Django 4.0.1 on 2022-01-20 19:12

from django.conf import settings
from django.db import migrations, models
import functools
from pathlib import Path
import util.storage


def move_profile_and_skill_and_suggestskill_images(apps, schema_editor):
    Profile = apps.get_model('checkin', 'Profile')
    Skill = apps.get_model('checkin', 'Skill')
    SuggestSkill = apps.get_model('checkin', 'SuggestSkill')
    old_paths_renamed_to_new_paths = {}
    try:
        for model in (Profile, Skill, SuggestSkill):
            # This only works because the three models happen to have the same image field name
            image_field = model._meta.get_field('image')

            for checkin_obj in model.objects.all():
                if not checkin_obj.image:
                    continue

                old_name = checkin_obj.image.name
                new_name = image_field.upload_to(checkin_obj, Path(old_name).name)
                if new_name == old_name:
                    continue
                else:
                    # Ensure that the name is available
                    new_name = image_field.storage.get_available_name(new_name, max_length=image_field.max_length)
                old_path = checkin_obj.image.path
                new_path = settings.MEDIA_ROOT / new_name
                new_upload_dir = new_path.parent

                new_upload_dir.mkdir(mode=0o755, parents=True, exist_ok=True)
                try:
                    Path(old_path).rename(new_path)
                except FileNotFoundError as e:
                    raise RuntimeError(
                        f"Unable to find and rename image file of {model._meta.model_name} with pk={checkin_obj.pk}."
                        f" Consider clearing the image field."
                    ) from e
                else:
                    old_paths_renamed_to_new_paths[old_path] = new_path
                checkin_obj.image.name = new_name
                checkin_obj.save(update_fields=['image'])
    except Exception as e:
        for old_path, new_path in old_paths_renamed_to_new_paths.items():
            try:
                Path(new_path).rename(old_path)
            except Exception as e2:
                print("Exception while undoing renaming:\n", e2)
        raise e


class Migration(migrations.Migration):

    dependencies = [
        ('checkin', '0010_alter_id_fields_to_use_bigautofield'),
    ]

    operations = [
        migrations.AlterField(
            model_name='profile',
            name='image',
            field=models.ImageField(blank=True, max_length=200, storage=util.storage.OverwriteStorage(), upload_to=functools.partial(util.storage.UploadToUtils._actual_upload_to, *(), **{'upload_to': 'profiles'}), verbose_name='Profile picture'),
        ),
        migrations.AlterField(
            model_name='skill',
            name='image',
            field=models.ImageField(blank=True, max_length=200, storage=util.storage.OverwriteStorage(), upload_to=functools.partial(util.storage.UploadToUtils._actual_upload_to, *(), **{'upload_to': 'skills'}), verbose_name='Illustration image'),
        ),
        migrations.AlterField(
            model_name='suggestskill',
            name='image',
            field=models.ImageField(blank=True, max_length=200, storage=util.storage.OverwriteStorage(), upload_to=functools.partial(util.storage.UploadToUtils._actual_upload_to, *(), **{'upload_to': 'skills/suggestions'}), verbose_name='Illustration image'),
        ),
        migrations.RunPython(move_profile_and_skill_and_suggestskill_images, migrations.RunPython.noop),
    ]
