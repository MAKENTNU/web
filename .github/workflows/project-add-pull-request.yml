# Code based on https://docs.github.com/en/issues/planning-and-tracking-with-projects/automating-your-project/automating-projects-using-actions#example-workflow-authenticating-with-a-github-app

name: Add pull requests to project

on:
  pull_request:
    types: [ opened, reopened, ready_for_review ]

jobs:
  add_to_project:
    # Don't run the job if it's a draft PR
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@f717b5ecd4534d3c4df4ce9b5c1c2214f0f7cd06
        with:
          app_id: ${{ secrets.MAKE_BOT_APP_ID }}
          private_key: ${{ secrets.MAKE_BOT_APP_PEM }}

      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORGANIZATION: MAKENTNU
          PROJECT_NUMBER: 1
        run: |
          gh api graphql -f query='
            query ($org: String!, $number: Int!) {
              organization(login: $org) {
                projectV2(number: $number) {
                  id
                  fields(first: 20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org="$ORGANIZATION" -F number="$PROJECT_NUMBER" > project_data.json

          {
            echo "PROJECT_ID=$(jq '.data.organization.projectV2.id' project_data.json)"
            echo "DATE_FIELD_ID=$(jq '.data.organization.projectV2.fields.nodes[] | select(.name=="Date posted") | .id' project_data.json)"
            echo "STATUS_FIELD_ID=$(jq '.data.organization.projectV2.fields.nodes[] | select(.name=="Status") | .id' project_data.json)"
            echo "STATUS_FIELD_VALUE_ID=$(jq '.data.organization.projectV2.fields.nodes[] | select(.name=="Status") | .options[] | select(.name=="Ready for Review") | .id' project_data.json)"
          } >> "$GITHUB_ENV"

      - name: Add PR to project
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          PR_ID: ${{ github.event.pull_request.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation ($project: ID!, $pr: ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $pr}) {
                item {
                  id
                }
              }
            }' -f project="$PROJECT_ID" -f pr="$PR_ID" --jq '.data.addProjectV2ItemById.item.id' )"

          echo "ITEM_ID=$item_id" >> "$GITHUB_ENV"

      - name: Get date
        run: echo "DATE=$(date --iso-8601)" >> "$GITHUB_ENV"

      - name: Set fields
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $status_field: ID!
              $status_value: String!
              $date_field: ID!
              $date_value: Date!
            ) {
              set_status: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $status_field
                value: {
                  singleSelectOptionId: $status_value
                }
              }) {
                projectV2Item {
                  id
                }
              }
              set_date_posted: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $date_field
                value: {
                  date: $date_value
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }' -f project="$PROJECT_ID" -f item="$ITEM_ID" -f status_field="$STATUS_FIELD_ID" -f status_value="$STATUS_FIELD_VALUE_ID" -f date_field="$DATE_FIELD_ID" -f date_value="$DATE" --silent
